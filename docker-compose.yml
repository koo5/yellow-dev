
services:
  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - ./mariadb:/var/lib/mysql
    depends_on: {}
    deploy:
      restart_policy:
        condition: any
    network_mode: "host"
    healthcheck:
      test: "mysqladmin  --protocol=tcp --host=localhost --user=root --password=password ping"
      interval: 1s
      timeout: 1m
      retries: 200


  server:
    network_mode: "host"
    build: ./yellow-server/
    volumes:
      - ./yellow-server:/app/app
      - ./yellow-server-common:/app/lib/yellow-server-common
      - ./yellow-server-settings.json:/app/settings.json
    environment:
      - VITE_YELLOW_SETTINGS_PATH=/app/settings.json
    depends_on:
      mariadb: {condition: service_healthy}
      messages: {condition: service_healthy}
    deploy:
      restart_policy:
        condition: any
    healthcheck:
      test: "curl -v --fail http://localhost:8086/"
      interval: 1s
      timeout: 1m
      retries: 200


  messages:
    network_mode: "host"
    build: ./yellow-server-module-messages/
    volumes:
      - ./yellow-server-module-messages:/app/app
      - ./yellow-server-common:/app/lib/yellow-server-common
      - ./yellow-server-module-messages-settings.json:/app/settings.json
    environment:
      - VITE_YELLOW_SETTINGS_PATH=/app/settings.json
    depends_on: {mariadb: {condition: service_healthy}}
    deploy:
      restart_policy:
        condition: any
    healthcheck:
      test: "curl -v --fail http://localhost:25001/"
      interval: 1s
      timeout: 1m
      retries: 200


  admin:
    network_mode: "host"
    build: ./yellow-admin/
    volumes:
      - ./yellow-admin:/app/app
      - ./yellow-server-common:/app/lib/yellow-server-common
    depends_on: {server: {condition: service_healthy}}
    deploy:
      restart_policy:
        condition: any


  client:
    network_mode: "host"
    build: ./yellow-client/
    volumes:
      - ./yellow-client:/app/app
    depends_on: {server: {condition: service_healthy}}
    deploy:
      restart_policy:
        condition: any


