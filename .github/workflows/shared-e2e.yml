name: E2E Tests With BuildX Caching

# Make this workflow reusable
on:
  workflow_call:
    inputs:
      client_repo:
        description: 'The source repository for the yellow-client code'
        required: false
        type: string
        default: ''
      client_ref:
        description: 'The ref (branch, tag, commit) to checkout for the client code'
        required: false
        type: string
        default: ''

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Print working directory
      run: |
        pwd

    # Conditionally checkout the client repo if specified
    - name: Checkout custom client code
      if: inputs.client_repo != ''
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.client_repo }}
        ref: ${{ inputs.client_ref }}
        path: source-client
    
    - name: Checkout yellow-dev
      uses: actions/checkout@v3
      with:
        repository: koo5/yellow-dev
        ref: master
        path: yellow-dev
        submodules: recursive

    
    # Replace yellow-client code if a custom client was checked out
    - name: Replace yellow-client code with custom source
      if: inputs.client_repo != ''
      run: |
        rm -rf yellow-dev/yellow-client && echo "Removed old yellow-client code"
        cp -r source-client yellow-dev/yellow-client && echo "Replaced yellow-client code with custom source"
    
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: '3.10'
#
#    - name: Install Python dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install requests
#        if [ -f yellow-dev/requirements.txt ]; then
#          pip install -r yellow-dev/requirements.txt
#        fi

    # Set up Docker Buildx with cache support
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        platforms: linux/amd64

    # Install Docker Compose v2
    - name: Install Docker Compose
      run: |
        # Docker Compose V2 is part of Docker CLI
        docker compose version || {
          echo "Docker Compose not found, installing..."
          # Ensure Docker CLI is installed and has compose plugin
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
        }
        
        # Verify installation
        docker compose version

    # Configure Docker Buildx to use cache with better scoping
    - name: Configure Docker Buildx Cache
      run: |
        # Create a custom buildx builder with cache configuration
        docker buildx create --name ci-builder --driver docker-container --use
        docker buildx inspect --bootstrap
        
        # Configure optimized BUILDX_CACHE with scoping for better cache hits
        echo "BUILDX_CACHE=type=gha,mode=max,scope=${{ github.ref_name }}-${{ github.workflow }}" >> $GITHUB_ENV
        echo "BUILDX_CACHE_FALLBACK=type=gha,mode=max,scope=master-${{ github.workflow }}" >> $GITHUB_ENV
        echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV

    - name: Run E2E Tests
      run: |
        pwd
        ls -l
        cd yellow-dev
        ls -l
        # Run CI script with full mode and stack network
        ./ci-run.sh false false true

    - name: Upload Playwright Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results-${{ github.run_id }}
        path: |
          yellow-dev/test-results/
          yellow-dev/playwright-report/
        retention-days: 30

    - name: Upload Docker Logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-logs-${{ github.run_id }}
        path: yellow-dev/docker-compose.log
        retention-days: 7
