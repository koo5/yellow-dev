name: E2E Tests Without BuildX

# Make this workflow reusable
on:
  workflow_call:
    inputs:
      client_repo:
        description: 'The source repository for the yellow-client code'
        required: false
        type: string
        default: ''
      client_ref:
        description: 'The ref (branch, tag, commit) to checkout for the client code'
        required: false
        type: string
        default: ''

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Print working directory
      run: |
        pwd
        ls -la

    # Conditionally checkout the client repo if specified
    - name: Checkout custom client code
      if: inputs.client_repo != ''
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.client_repo }}
        ref: ${{ inputs.client_ref }}
        path: source-client
    
    - name: Checkout yellow-dev
      uses: actions/checkout@v3
      with:
        repository: koo5/yellow-dev
        ref: master
        path: yellow-dev
        submodules: recursive
    
    # Replace yellow-client code if a custom client was checked out
    - name: Replace yellow-client code with custom source
      if: inputs.client_repo != ''
      run: |
        rm -rf yellow-dev/yellow-client && echo "Removed old yellow-client code"
        cp -r source-client yellow-dev/yellow-client && echo "Replaced yellow-client code with custom source"
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        if [ -f yellow-dev/requirements.txt ]; then
          pip install -r yellow-dev/requirements.txt
        fi
    
    - name: Set up Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    # Install Docker Compose v2
    - name: Install Docker Compose
      run: |
        # Docker Compose V2 is part of Docker CLI
        docker compose version || {
          echo "Docker Compose not found, installing..."
          # Ensure Docker CLI is installed and has compose plugin
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
        }
        
        # Verify installation
        docker compose version
        
        # Create executable 'docker-compose' script in PATH for backward compatibility
        sudo tee /usr/local/bin/docker-compose > /dev/null << 'EOF'
        #!/bin/bash
        docker compose "$@"
        EOF
        sudo chmod +x /usr/local/bin/docker-compose
        
        # Verify docker-compose script works
        docker-compose version

    - name: Install playwright
      run: |
        cd yellow-dev/yellow-client
        bun install
        bun x playwright install --with-deps
    
    - name: Install Fish Shell and MariaDB Client
      run: |
        sudo apt-get update
        sudo apt-get install -y fish mariadb-client
    
    - name: Run E2E Tests without buildx
      run: |
        ls -la
        cd yellow-dev
        ls -la
        
        # Verify script exists
        if [ ! -f "scripts/run_compose_and_test.py" ]; then
          echo "ERROR: Test script not found at expected location scripts/run_compose_and_test.py"
          find . -name "run_compose_and_test.py"
          exit 1
        fi

        # Check if docker-compose.ci.yml exists
        if [ ! -f "docker-compose.ci.yml" ]; then
          echo "Warning: docker-compose.ci.yml not found."
        fi
        
        # Check for Dockerfiles in service contexts
        echo "Checking for Dockerfiles in service contexts..."
        for dir in yellow-server-common yellow-server yellow-client yellow-admin yellow-server-module-messages; do
          if [ -f "$dir/Dockerfile" ]; then
            echo "✅ $dir/Dockerfile exists"
          else
            echo "❌ $dir/Dockerfile is missing"  
          fi
        done
        
        CI=true \
        python scripts/run_compose_and_test.py