name: E2E Tests Without BuildX

# Make this workflow reusable
on:
  workflow_call:
    inputs:
      client_repo:
        description: 'The source repository for the yellow-client code'
        required: false
        type: string
        default: ''
      client_ref:
        description: 'The ref (branch, tag, commit) to checkout for the client code'
        required: false
        type: string
        default: ''

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Print working directory
      run: |
        pwd

    # Conditionally checkout the client repo if specified
    - name: Checkout custom client code
      if: inputs.client_repo != ''
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.client_repo }}
        ref: ${{ inputs.client_ref }}
        path: source-client
    
    - name: Checkout yellow-dev
      uses: actions/checkout@v3
      with:
        path: yellow-dev
        submodules: recursive
    
    # Replace yellow-client code if a custom client was checked out
    - name: Replace yellow-client code with custom source
      if: inputs.client_repo != ''
      run: |
        rm -rf yellow-dev/yellow-client && echo "Removed old yellow-client code"
        cp -r source-client yellow-dev/yellow-client && echo "Replaced yellow-client code with custom source"
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        if [ -f yellow-dev/requirements.txt ]; then
          pip install -r yellow-dev/requirements.txt
        fi

    # Install Docker Compose v2
    - name: Install Docker Compose
      run: |
        # Docker Compose V2 is part of Docker CLI
        docker compose version || {
          echo "Docker Compose not found, installing..."
          # Ensure Docker CLI is installed and has compose plugin
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
        }
        
        # Verify installation
        docker compose version
        
        # Create executable 'docker-compose' script in PATH for backward compatibility
        sudo tee /usr/local/bin/docker-compose > /dev/null << 'EOF'
        #!/bin/bash
        docker compose "$@"
        EOF
        sudo chmod +x /usr/local/bin/docker-compose
        
        # Verify docker-compose script works
        docker-compose version
    

    - name: Run E2E Tests
      run: |
        cd yellow-dev
        # Run CI script with full mode and stack network
        ./ci-run.sh false false true